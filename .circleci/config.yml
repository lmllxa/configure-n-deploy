# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
jobs:
  get_url:
    docker:
      - image: amazon/aws-cli
      #- image: circleci/node:13.8.0
    steps:
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run: echo "" > ~/output.txt
      - run: readlink -f ~/output.txt 
      - persist_to_workspace:
          root: ~/
          paths: 
            - output.txt 
      - checkout
      - run:
          name: Get frontend url
          command: |
            export FRONTEND_IP=$(aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Name,Values=node-web-server" \
              --output text)
            echo "$FRONTEND_IP"
            echo "$FRONTEND_IP" >> inventory
            export API_URL="http://${FRONTEND_IP}:3000"
            echo $API_URL >> ~/output.txt
            chmod u+x simple.sh
            ./simple.sh
      # - attach_workspace:
      #     at: ~/
      # - run: cat ~/output.txt 
  print_url:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - attach_workspace:
          at: ~/
      - run: cat output.txt
      - run: EXPORT MY_IP=`cat output.txt`       
  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["ac:c1:43:62:7d:a0:1b:84:eb:0e:f8:4d:c3:2e:61:fb"] 
      - run:
          name: Install Ansible
          command: |
            # Install Ansible
            apk add --update ansible
      - run:
          name: List files
          command: |
            ls -al
            echo '^^^The files in my repo^^^'
      - run:
          name: Run Playbook and Configure server
          command: |
            # Your command --private-key udacity.pem
            ansible-playbook main.yml -i inventory 
  smoke_test:
    docker:
      #- image: alpine:latest
      - image: amazon/aws-cli
    steps:
      - attach_workspace:
          at: ~/
      - run: cat output.txt
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="http://${MY_IP}:3000"
            # Test if website works
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
workflows:
  myWorkflow:
    jobs:
      - get_url
      - print_url:
          requires:
            - get_url
      - configure_infrastructure
      - smoke_test:
          requires:
            - configure_infrastructure
